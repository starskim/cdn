var digital =
[
    [
        [0,0,1,1,1,0,0],
        [0,1,1,0,1,1,0],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,0,1,1,0],
        [0,0,1,1,1,0,0]
    ],//0
    [
        [0,0,0,1,1,0,0],
        [0,1,1,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [1,1,1,1,1,1,1]
    ],//1
    [
        [0,1,1,1,1,1,0],
        [1,1,0,0,0,1,1],
        [0,0,0,0,0,1,1],
        [0,0,0,0,1,1,0],
        [0,0,0,1,1,0,0],
        [0,0,1,1,0,0,0],
        [0,1,1,0,0,0,0],
        [1,1,0,0,0,0,0],
        [1,1,0,0,0,1,1],
        [1,1,1,1,1,1,1]
    ],//2
    [
        [1,1,1,1,1,1,1],
        [0,0,0,0,0,1,1],
        [0,0,0,0,1,1,0],
        [0,0,0,1,1,0,0],
        [0,0,1,1,1,0,0],
        [0,0,0,0,1,1,0],
        [0,0,0,0,0,1,1],
        [0,0,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,1,1,1,0]
    ],//3
    [
        [0,0,0,0,1,1,0],
        [0,0,0,1,1,1,0],
        [0,0,1,1,1,1,0],
        [0,1,1,0,1,1,0],
        [1,1,0,0,1,1,0],
        [1,1,1,1,1,1,1],
        [0,0,0,0,1,1,0],
        [0,0,0,0,1,1,0],
        [0,0,0,0,1,1,0],
        [0,0,0,1,1,1,1]
    ],//4
    [
        [1,1,1,1,1,1,1],
        [1,1,0,0,0,0,0],
        [1,1,0,0,0,0,0],
        [1,1,1,1,1,1,0],
        [0,0,0,0,0,1,1],
        [0,0,0,0,0,1,1],
        [0,0,0,0,0,1,1],
        [0,0,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,1,1,1,0]
    ],//5
    [
        [0,0,0,0,1,1,0],
        [0,0,1,1,0,0,0],
        [0,1,1,0,0,0,0],
        [1,1,0,0,0,0,0],
        [1,1,0,1,1,1,0],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,1,1,1,0]
    ],//6
    [
        [1,1,1,1,1,1,1],
        [1,1,0,0,0,1,1],
        [0,0,0,0,1,1,0],
        [0,0,0,0,1,1,0],
        [0,0,0,1,1,0,0],
        [0,0,0,1,1,0,0],
        [0,0,1,1,0,0,0],
        [0,0,1,1,0,0,0],
        [0,0,1,1,0,0,0],
        [0,0,1,1,0,0,0]
    ],//7
    [
        [0,1,1,1,1,1,0],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,1,1,1,0],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,1,1,1,0]
    ],//8
    [
        [0,1,1,1,1,1,0],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [1,1,0,0,0,1,1],
        [0,1,1,1,0,1,1],
        [0,0,0,0,0,1,1],
        [0,0,0,0,0,1,1],
        [0,0,0,0,1,1,0],
        [0,0,0,1,1,0,0],
        [0,1,1,0,0,0,0]
    ],//9
    [
        [0,0,0,0],
        [0,0,0,0],
        [0,1,1,0],
        [0,1,1,0],
        [0,0,0,0],
        [0,0,0,0],
        [0,1,1,0],
        [0,1,1,0],
        [0,0,0,0],
        [0,0,0,0]
    ],//:
    [
        [0,0,1,1,1,1,1,1,1,1,1,1,0,0],
        [0,0,0,0,0,0,1,1,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,1,0,0,0,0,0,0],
        [0,1,1,1,1,1,1,1,1,1,1,1,1,0],
        [0,0,0,0,0,0,1,1,1,0,0,0,0,0],
        [0,0,0,0,0,1,1,1,1,0,0,0,0,0],
        [0,0,0,0,0,1,1,1,1,1,0,0,0,0],
        [0,0,0,0,1,1,1,0,1,1,1,0,0,0],
        [0,0,1,1,1,1,0,0,0,1,1,1,0,0],
        [0,1,1,1,0,0,0,0,0,0,1,1,1,0]
    ],// 天
    [
        [0,0,1,1,1,1,1,1,1,1,1,1,0,0],
        [0,0,0,1,1,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,1,1,1,1,1,1,1,1,1,1,1,1,0],
        [0,0,0,1,1,0,1,1,1,1,1,0,0,0],
        [0,0,0,1,1,0,1,1,0,1,1,0,0,0],
        [0,0,0,1,1,1,1,1,1,1,1,1,0,0],
        [0,0,0,1,1,1,1,1,1,0,1,1,0,0],
        [0,0,1,1,1,1,0,0,0,0,0,0,0,0],
        [0,1,1,0,0,1,1,1,1,1,1,1,1,0]
    ],// 运
    [
        [0,0,0,1,1,0,0,0,0,0,0,0,0,0],
        [0,0,1,1,1,0,1,1,1,1,1,1,1,0],
        [0,0,1,1,0,0,0,0,0,0,0,0,0,0],
        [0,1,1,1,1,1,0,0,0,0,0,0,0,0],
        [0,0,0,1,1,1,1,1,1,1,1,1,1,0],
        [0,0,1,1,1,0,0,0,0,1,1,0,0,0],
        [0,1,1,1,1,0,0,0,0,1,1,0,0,0],
        [0,1,1,1,1,0,0,0,0,1,1,0,0,0],
        [0,0,1,1,1,0,0,0,0,1,1,0,0,0],
        [0,0,1,1,1,0,0,1,1,1,1,0,0,0]
    ]// 行
];


window.onload = function () {
    console.log("window.onload")
    var oCanvas = document.getElementById("timecanvas"),
    oGc = oCanvas.getContext('2d'),
    width = oCanvas.width, height = oCanvas.height,
    radius = 2,
    now = new Date();
    grt= new Date("2017/07/17 23:59");
    setInterval(function(){
        oGc.clearRect( 0, 0, width, height );
        showDateTime( oGc );
        console.log("setInterval...")
    }, 500);

    function showDateTime(cxt){
        now.setTime(now.getTime() + 250);
        days = (now - grt ) / 1000 / 60 / 60 / 24;
        dnum = Math.floor(days);
        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum);
        hnum = Math.floor(hours);
        minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);
        mnum = Math.floor(minutes); 
        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);
        snum = Math.round(seconds); 
        showNum( 0, 0, 12, cxt );
        showNum( 25 * ( radius + 1 ), 0, 13, cxt );
        showNum( 55 * ( radius + 1 ), 0, parseInt( dnum / 100 ), cxt );
        showNum( 70 * ( radius + 1 ), 0, parseInt( dnum % 100 / 10 ), cxt );
        showNum( 85 * ( radius + 1 ), 0, parseInt( dnum % 10 ), cxt );
        showNum( 100 * ( radius + 1 ), 0, 11, cxt );
        showNum( 130 * ( radius + 1 ), 0, parseInt( hnum / 10 ), cxt );
        showNum( 145 * ( radius + 1 ), 0, parseInt( hnum % 10 ), cxt );
        showNum( 160 * ( radius + 1 ), 0, 10, cxt );
        showNum( 169 * ( radius + 1 ), 0, parseInt( mnum / 10 ), cxt );
        showNum( 184 * ( radius + 1 ), 0, parseInt( mnum % 10 ), cxt );
        showNum( 199 * ( radius + 1 ), 0, 10, cxt );
        showNum( 208 * ( radius + 1 ), 0, parseInt( snum / 10 ), cxt );
        showNum( 223 * ( radius + 1 ), 0, parseInt( snum % 10 ), cxt );
    }

    //显示时间的每一位
    function showNum( x, y, num, cxt ){
        cxt.fillStyle = '#09f';
        for( var i = 0; i < digital[num].length; i++ ){
            for( var j = 0; j < digital[num][i].length; j++ ){
                if ( digital[num][i][j] == 1 ){
                    cxt.beginPath();
                    cxt.arc( x + j * 2 * ( radius + 1 ) + ( radius + 1 ), y + i * 2 * ( radius + 1 ) + ( radius + 1 ), radius, 0, + 360 * Math.PI / 180, false );
                    cxt.closePath();
                    cxt.fill();
                }
            }
        }
    }
}